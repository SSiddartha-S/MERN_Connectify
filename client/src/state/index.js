// Importing createSlice from @reduxjs/toolkit to create a slice of the Redux state
import { createSlice } from "@reduxjs/toolkit";

// Defining the initial state for the auth slice
const initialState = { 
  mode: "light", // State to manage the theme mode, either "light" or "dark"
  user: null, // State to store user information
  token: null, // State to store the authentication token
  posts: [], // State to store posts data, initialized as an empty array
};

// Creating the auth slice
export const authSlice = createSlice({
  name: "auth", // Name of the slice
  initialState, // Initial state of the slice
  reducers: { // Reducers to handle state changes
    setMode: (state) => {
      // Toggles the theme mode between "light" and "dark"
      state.mode = state.mode === "light" ? "dark" : "light";
    },
    setLogin: (state, action) => {
      // Sets the user and token when a user logs in
      state.user = action.payload.user;
      state.token = action.payload.token;
    },
    setLogout: (state) => {
      // Clears the user and token when a user logs out
      state.user = null;
      state.token = null;
    },
    setFriends: (state, action) => {
      // Sets the user's friends list
      if (state.user) {
        state.user.friends = action.payload.friends;
      } else {
        console.error("User friends non-existent :(");
      }
    },
    setPosts: (state, action) => {
      // Sets the list of posts, ensuring it is an array
      state.posts = Array.isArray(action.payload.posts) ? action.payload.posts : [];
    },
    setPost: (state, action) => {
      // Updates a specific post in the list of posts
      if (Array.isArray(state.posts)) {
        state.posts = state.posts.map((post) => 
          post._id === action.payload.post._id ? action.payload.post : post
        );
      } else {
        console.error("Posts state is not an array.");
      }
    },
  },
});

// Exporting the actions generated by createSlice for use in components
export const { setMode, setLogin, setLogout, setFriends, setPosts, setPost } = authSlice.actions;

// Exporting the reducer to be included in the store
export default authSlice.reducer;
